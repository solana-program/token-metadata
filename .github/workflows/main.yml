name: Main

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  format_and_lint_interface:
    name: Format & Lint Interface
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          clippy: true
          rustfmt: true
          cargo-cache-key: cargo-interface-lint
          cargo-cache-fallback-key: cargo-interface

      - name: Format
        run: pnpm interface:format

      - name: Lint
        run: pnpm interface:lint

  format_and_lint_programs:
    name: Format & Lint Programs
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          clippy: true
          rustfmt: true
          cli: true
          cargo-cache-key: cargo-programs-lint
          cargo-cache-fallback-key: cargo-programs

      - name: Format
        run: pnpm programs:format

      - name: Lint
        run: pnpm programs:lint

  format_and_lint_client_js_legacy:
    name: Format & Lint Client JS Legacy
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Format Client JS Legacy
        run: pnpm clients:js-legacy:format

      - name: Lint Client JS Legacy
        run: pnpm clients:js-legacy:lint

  audit_rust:
    name: Audit Rust
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-audit

      - name: Install cargo-audit
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-audit

      - name: Run cargo-audit
        run: pnpm rust:audit

  spellcheck_rust:
    name: Spellcheck Rust
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-spellcheck

      - name: Install cargo-spellcheck
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-spellcheck

      - name: Run cargo-spellcheck
        run: pnpm rust:spellcheck

  build_programs:
    name: Build programs
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          solana: true
          cargo-cache-key: cargo-programs

      - name: Build Program
        run: pnpm programs:build

      - name: Upload Program Builds
        uses: actions/upload-artifact@v4
        with:
          name: program-builds
          path: ./target/deploy/*.so
          if-no-files-found: error

      - name: Save Program Builds For Client Jobs
        uses: actions/cache/save@v4
        with:
          path: ./target/deploy/*.so
          key: ${{ runner.os }}-builds-${{ github.sha }}

  test_interface:
    name: Test Interface
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-interface-tests
          cargo-cache-fallback-key: cargo-interface

      - name: Test
        run: pnpm interface:test

  test_programs:
    name: Test Programs
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-program-tests
          cargo-cache-fallback-key: cargo-programs
          solana: true
          cli: true

      - name: Test Programs
        run: pnpm programs:test

  test_client_js_legacy:
    name: Test Client JS Legacy
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          solana: true

      - name: Restore Program Builds
        uses: actions/cache/restore@v4
        with:
          path: ./target/deploy/*.so
          key: ${{ runner.os }}-builds-${{ github.sha }}

      - name: Test Client JS Legacy
        run: pnpm clients:js-legacy:test
